// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cheelim1/docdb-autoscaler/pkg/autoscaling (interfaces: RDSAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	rds "github.com/aws/aws-sdk-go-v2/service/rds"
	gomock "github.com/golang/mock/gomock"
)

// MockRDSAPI is a mock of RDSAPI interface.
type MockRDSAPI struct {
	ctrl     *gomock.Controller
	recorder *MockRDSAPIMockRecorder
}

// MockRDSAPIMockRecorder is the mock recorder for MockRDSAPI.
type MockRDSAPIMockRecorder struct {
	mock *MockRDSAPI
}

// NewMockRDSAPI creates a new mock instance.
func NewMockRDSAPI(ctrl *gomock.Controller) *MockRDSAPI {
	mock := &MockRDSAPI{ctrl: ctrl}
	mock.recorder = &MockRDSAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRDSAPI) EXPECT() *MockRDSAPIMockRecorder {
	return m.recorder
}

// DescribeDBClusters mocks base method.
func (m *MockRDSAPI) DescribeDBClusters(arg0 context.Context, arg1 *rds.DescribeDBClustersInput, arg2 ...func(*rds.Options)) (*rds.DescribeDBClustersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeDBClusters", varargs...)
	ret0, _ := ret[0].(*rds.DescribeDBClustersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDBClusters indicates an expected call of DescribeDBClusters.
func (mr *MockRDSAPIMockRecorder) DescribeDBClusters(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDBClusters", reflect.TypeOf((*MockRDSAPI)(nil).DescribeDBClusters), varargs...)
}
