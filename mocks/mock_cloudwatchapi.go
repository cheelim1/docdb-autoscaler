// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cheelim1/docdb-autoscaler/pkg/autoscaling (interfaces: CloudWatchAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	cloudwatch "github.com/aws/aws-sdk-go-v2/service/cloudwatch"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudWatchAPI is a mock of CloudWatchAPI interface.
type MockCloudWatchAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCloudWatchAPIMockRecorder
}

// MockCloudWatchAPIMockRecorder is the mock recorder for MockCloudWatchAPI.
type MockCloudWatchAPIMockRecorder struct {
	mock *MockCloudWatchAPI
}

// NewMockCloudWatchAPI creates a new mock instance.
func NewMockCloudWatchAPI(ctrl *gomock.Controller) *MockCloudWatchAPI {
	mock := &MockCloudWatchAPI{ctrl: ctrl}
	mock.recorder = &MockCloudWatchAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudWatchAPI) EXPECT() *MockCloudWatchAPIMockRecorder {
	return m.recorder
}

// GetMetricStatistics mocks base method.
func (m *MockCloudWatchAPI) GetMetricStatistics(arg0 context.Context, arg1 *cloudwatch.GetMetricStatisticsInput, arg2 ...func(*cloudwatch.Options)) (*cloudwatch.GetMetricStatisticsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetMetricStatistics", varargs...)
	ret0, _ := ret[0].(*cloudwatch.GetMetricStatisticsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricStatistics indicates an expected call of GetMetricStatistics.
func (mr *MockCloudWatchAPIMockRecorder) GetMetricStatistics(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricStatistics", reflect.TypeOf((*MockCloudWatchAPI)(nil).GetMetricStatistics), varargs...)
}
